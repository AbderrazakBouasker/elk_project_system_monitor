input {
  file {
    path => "/usr/share/logstash/logs/syslog"  # Path to your syslog file
    # start_position => "beginning"
    # sincedb_path => "/dev/null"  # Disable sincedb to read from the start every time (for testing)
    codec => "plain"  # Use plain codec for syslog
    sincedb_path => "/usr/share/logstash/data/.sincedb"
  }
}

filter {
  grok {
    match => {
      "message" => [
        "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:message}",
        "%{SYSLOGTIMESTAMP:timestamp} %{GREEDYDATA:message}"
      ]
    }
  }

  date {
    match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss" ]
    target => "@timestamp"
  }

  mutate {
    add_field => {
      "event_type" => "syslog"
      "log_type" => "%{program}"
    }
  }

  if [program] =~ /systemd/ {
    grok {
      match => { "message" => "(?<service_name>.*?): (?<status>Started|Stopped|Starting|Stopping|Finished|Failed) (?<description>.*)" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]  # Adjust according to your Elasticsearch setup
    index => "syslog-%{+YYYY.MM.dd}"
  }

  # For debugging purposes, you can also output to stdout
  #stdout { 
   # codec => rubydebug 
  #}
}


