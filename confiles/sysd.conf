input {
  file {
    path => "/usr/share/logstash/logs/sysd.json"  # Change to the path of your JSON log file
    start_position => "beginning"
    codec => "json"
    sincedb_path => "/dev/null"  # Disable sincedb for testing purposes
  }
}

filter {
  # Date parsing for better time representation
  date {
    match => ["SYSLOG_TIMESTAMP", "MMM dd HH:mm:ss"]
    target => "@timestamp"
    remove_field => ["SYSLOG_TIMESTAMP"]
  }

  # Extract useful fields for easier visualization
  mutate {
    add_field => {
      "host" => "%{_HOSTNAME}"
      "service" => "%{SYSLOG_IDENTIFIER}"
      "process_id" => "%{SYSLOG_PID}"
      "user_id" => "%{_UID}"
      "command" => "%{_CMDLINE}"
      "priority" => "%{PRIORITY}"
    }
    remove_field => [
      "_CURSOR", "_BOOT_ID", "_MACHINE_ID", "_SELINUX_CONTEXT",
      "_TRANSPORT", "_SYSTEMD_UNIT", "_SYSTEMD_CGROUP", "_SYSTEMD_INVOCATION_ID"
    ]
  }

  # If applicable, categorize logs based on specific messages
  if "Unable to find a sensor" in [MESSAGE] {
    mutate {
      add_tag => ["sensor_warning"]
    }
  } else if "Executing command" in [MESSAGE] {
    mutate {
      add_tag => ["command_execution"]
    }
  }

  # Optional: Geolocation enrichment if you have relevant data
  # geoip {
  #   source => "client_ip"  # Example field, adjust based on your log structure
  # }

  # Optional: Add any custom field mapping here
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]  # Adjust if needed
    index => "systemd-logs-%{+YYYY.MM.dd}"
    document_type => "_doc"  # Required for ES 7.x and above
  }

  # For debugging purposes
  #stdout {
   # codec => rubydebug
  #}
}


