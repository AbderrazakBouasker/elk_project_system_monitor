input {
  file {
    path => "/usr/share/logstash/logs/kern.log"  # Update this with the actual path to your kern.log
    start_position => "beginning"
    sincedb_path => "/dev/null"  # Prevents Logstash from remembering the last read position
  }
}

filter {
  # Grok pattern to parse the log entries
  grok {
    match => {
      "message" => "%{MONTH:month} %{MONTHDAY:day} %{TIME:time} %{DATA:host} kernel: \[%{NUMBER:timestamp:float}\] %{GREEDYDATA:log_message}"
    }
  }

  # Create a timestamp field for the log entry
  date {
    match => ["timestamp", "UNIX"]
    target => "@timestamp"
  }

  # Optional: Tag specific log messages
  if "PM: suspend exit" in [log_message] {
    mutate { add_tag => ["suspend_exit"] }
  }
  
  if "MMIO read" in [log_message] {
    mutate { add_tag => ["MMIO_read"] }
  }
  
  if "New USB device" in [log_message] {
    mutate { add_tag => ["USB_device"] }
  }

  # Additional filters can be added here
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]  # Update if necessary
    index => "kern_logs-%{+YYYY.MM.dd}"
  }
  
  #stdout {
   # codec => rubydebug  # Prints to the console for debugging
  #}
}


